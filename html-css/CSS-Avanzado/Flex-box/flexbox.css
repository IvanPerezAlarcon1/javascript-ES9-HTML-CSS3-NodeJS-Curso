/*Existe un contenedor flex padre, luego vienen los hijos los cuales tienen un valor de orden por defecto, el primero es 0*/

body{
    /* width: 200px; */
}


.flex{
    /*pasa de arriba a abajo, a izquierda a derecha*/
    display: flex;
    /*Hace que el contenido vaya de derecha a izquierda, posee
    valores como column(muestra el contenido en columnas),
    column-reverse(muestra el ultimo elemento primero)*/
    /* flex-direction: row-reverse; */

    /*si el contenido se sale del contenedor en ancho, se pasa 
    a la siguiente línea*/
    /* flex-wrap: wrap; */

    /*este es un atajo para flex-direction y flex-wrap, tiene
    la direccion row y con wrap si el contenido no alcanza pasa
    a la siguiente línea*/
    flex-flow: row wrap;
    /*alinea el contenido en el flex-box, puede tener
    valores como space-between para poner espacio entre los 
    elementos pero no al inicio ni al final. space-evenly pone
    espacio entre los elementos incluido el inicio y el fina
    de la flex-box*/
    justify-content: center;
    /*align-items:end; desplaza el contenido del flexbox hacia 
    la parte de abajo de este, el valor center deja el contenido
    centrado, stretch hace que los elementos ocupen todo
    el alto de los divs en donde se encuentran*/
    align-items: end;
    height: 200px;
    /*aliugn-content distribuye el contenido basado en la altura del contenedor padre, 
    otros valore sson flex-start(por defecto),center y stretch(ocupa todo el espacio disponible) 
    y space-evenly para generar espacios entre los elementos, antes y después*/
    /*align-content: flex-end; */
}

.red{
    background-color: red;
}


/*aquí se ven los ordenes de los elementos del flex box padre, tienen un orden por defecto el cual puede ser cambiado*/
.first{
    /* order: 0; */
    /*Permite a los elementos crecer de manera dinámica a los elementos basada en el espacio disponible, utiliza las unides
    de espacio disponible que debe tomar*/
    flex-grow: 1;
    /*se le asigna un width al elemento, luego los demas elementos se reparten el espacio restante según se indique*/
    flex-basis: 120px;
}

.second{
    /* order: 1; */
    flex-grow: 2;
    /* Alinea el contenido del flex-box*/
    align-self: center;
}

.tercero{
    /* order: 1; */
    /*Forma corta de escribir flex-grow y flex-basis*/
    flex: 2 120px;
}